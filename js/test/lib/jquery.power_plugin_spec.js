// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  describe("$.PowerPlugin", function() {
    describe(".setup", function() {
      var DummyPlugin;
      DummyPlugin = (function(_super) {

        __extends(DummyPlugin, _super);

        function DummyPlugin() {
          return DummyPlugin.__super__.constructor.apply(this, arguments);
        }

        DummyPlugin.prototype.defaults = {
          message: "Hello World"
        };

        DummyPlugin.prototype.initialize = function() {
          return this.element.append("<p>" + this.options.message + "</p>");
        };

        return DummyPlugin;

      })($.PowerPlugin);
      beforeEach(function() {
        this.div = $("<div></div>");
        return DummyPlugin.setup("dummyPlugin");
      });
      it("adds the plugin to jQuery elements", function() {
        return expect(this.div).to.respondTo("dummyPlugin");
      });
      it("initializes the plugin", function() {
        this.div.dummyPlugin();
        return expect(this.div.html()).to.equal("<p>Hello World</p>");
      });
      return it("customizes the plugin options", function() {
        this.div.dummyPlugin({
          message: "I'm customized!"
        });
        return expect(this.div.html()).to.equal("<p>I'm customized!</p>");
      });
    });
    return describe("#bindEvents", function() {
      var DummyPlugin;
      DummyPlugin = (function(_super) {

        __extends(DummyPlugin, _super);

        function DummyPlugin() {
          return DummyPlugin.__super__.constructor.apply(this, arguments);
        }

        DummyPlugin.prototype.defaults = {
          messageSelector: ".message"
        };

        DummyPlugin.prototype.events = {
          "submit": "submit",
          "change input": "changeInput"
        };

        DummyPlugin.prototype.initialize = function() {
          return this.message = this.element.find(this.options.messageSelector);
        };

        DummyPlugin.prototype.submit = function(e) {
          e.preventDefault();
          return this.message.html("Submitting form...");
        };

        DummyPlugin.prototype.changeInput = function(e) {
          var $target;
          e.preventDefault();
          $target = $(e.target);
          return this.message.html("Input changed to '" + ($target.val()) + "'.");
        };

        return DummyPlugin;

      })($.PowerPlugin);
      beforeEach(function() {
        this.form = $("<form>\n  <input type=\"text\">\n  <div class=\"message\"></div>\n</form>");
        DummyPlugin.setup("dummyPlugin");
        return this.form.dummyPlugin();
      });
      it("binds an event to the main element", function() {
        this.form.submit();
        return expect(this.form.find(".message").text()).to.equal("Submitting form...");
      });
      return it("binds an event to a child element", function() {
        this.form.find("input").val("dude").change();
        return expect(this.form.find(".message").text()).to.equal("Input changed to 'dude'.");
      });
    });
  });

}).call(this);
